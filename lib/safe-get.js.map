{"version":3,"file":"safe-get.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Check if the object has the nested keys list\n * @example\n * checkObject({a:{b:[1,2,3]}}, [\"a\", \"b\", 2])); // returns 3\n * checkObject({a:{b:[1,2,3]}}),\"a.b.0\"); // returns the b[0]\n * @export\n * @param {Object} object - the object to be checked\n * @param {Array|String} keys - a string point separated or a list of string keys\n * @param {any} [defaultReturn=null]\n * @returns {any|null} returns any value for that key or null if the key is undefined\n */\nexport default function safeAccess(object, keys, defaultReturn = null) {\n  let _keys;\n  if (typeof keys === 'string') {\n    _keys = keys.split('.');\n  } else if (Array.isArray(keys)) {\n    _keys = keys;\n  } else {\n    return defaultReturn;\n  }\n  return _keys.reduce((obj, key) => {\n    if (\n      obj ||\n      (typeof obj[key] === 'number' && typeof obj[key] !== 'undefined')\n    ) {\n      return obj[key];\n    }\n    return defaultReturn;\n  }, object);\n}"],"names":["object","keys","defaultReturn","let","_keys","split","Array","isArray","reduce","obj","key"],"mappings":"eAWe,SAAoBA,EAAQC,EAAMC,GAC/CC,IAAIC,EACJ,kBAF+D,MAE3C,iBAATH,EACTG,EAAQH,EAAKI,MAAM,SACd,CAAA,IAAIC,MAAMC,QAAQN,GAGvB,OAAOC,EAFPE,EAAQH,EAIV,OAAOG,EAAMI,gBAAQC,EAAKC,GACxB,OACED,GACqB,iBAAbA,EAAIC,SAAyC,IAAbD,EAAIC,GAErCD,EAAIC,GAENR,GACNF"}